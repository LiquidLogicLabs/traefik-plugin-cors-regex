name: Plugin Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-plugin:
    name: Validate Plugin for Catalog
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Validate .traefik.yml exists
      run: |
        if [ ! -f ".traefik.yml" ]; then
          echo "❌ .traefik.yml manifest file is missing"
          exit 1
        fi
        echo "✅ .traefik.yml manifest found"
        
    - name: Validate go.mod exists
      run: |
        if [ ! -f "go.mod" ]; then
          echo "❌ go.mod file is missing"
          exit 1
        fi
        echo "✅ go.mod file found"
        
    - name: Validate .traefik.yml structure
      run: |
        # Check required fields in .traefik.yml
        required_fields=("displayName" "type" "import" "summary" "testData")
        
        for field in "${required_fields[@]}"; do
          if ! grep -q "$field:" .traefik.yml; then
            echo "❌ Required field '$field' missing in .traefik.yml"
            exit 1
          fi
          echo "✅ Field '$field' found in .traefik.yml"
        done
        
    - name: Validate plugin import path
      run: |
        import_path=$(grep "import:" .traefik.yml | cut -d' ' -f2)
        module_path=$(head -1 go.mod | cut -d' ' -f2)
        
        if [ "$import_path" != "$module_path" ]; then
          echo "❌ Import path mismatch:"
          echo "   .traefik.yml: $import_path"
          echo "   go.mod: $module_path"
          exit 1
        fi
        echo "✅ Import path matches between .traefik.yml and go.mod"
        
    - name: Validate plugin can be instantiated
      run: |
        # Try to instantiate plugin with testData from .traefik.yml
        go mod download
        go mod verify
        
        # Extract testData from .traefik.yml and validate plugin loads
        echo "Testing plugin instantiation with testData..."
        go test -v -run TestCreateConfig ./...
        
    - name: Check plugin dependencies
      run: |
        echo "Checking plugin dependencies..."
        go mod tidy
        go mod verify
        
        # Check if any changes were made by go mod tidy
        if ! git diff --exit-code go.mod go.sum; then
          echo "❌ go.mod or go.sum has uncommitted changes after 'go mod tidy'"
          echo "Please run 'go mod tidy' and commit the changes"
          exit 1
        fi
        echo "✅ Plugin dependencies are clean"
        
    - name: Validate repository requirements
      run: |
        echo "📋 Plugin Catalog Requirements Checklist:"
        echo "✅ Repository is public (GitHub Actions can run)"
        echo "✅ .traefik.yml manifest exists"
        echo "✅ go.mod file exists"
        echo "✅ Import path is valid"
        echo "✅ Plugin can be instantiated"
        echo "✅ Dependencies are clean"
        echo ""
        echo "🚨 MANUAL REQUIREMENTS TO CHECK:"
        echo "   📌 Repository topic 'traefik-plugin' must be added manually"
        echo "   📌 Repository must not be a fork"
        echo "   📌 Repository must be public"
        echo ""
        echo "📖 Next steps for release:"
        echo "   1. Add 'traefik-plugin' topic to repository settings"
        echo "   2. Create and push a git tag (e.g., v0.1.1)"
        echo "   3. GitHub Actions will create release with vendored dependencies"
        echo "   4. Plugin Catalog will discover plugin within ~30 minutes"
        
  integration-test:
    name: Integration Test (Local Mode)
    runs-on: ubuntu-latest
    needs: validate-plugin
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Run local mode integration test
      run: |
        echo "🧪 Running local mode integration tests..."
        make local-test
        
    - name: Test results
      run: |
        echo "✅ Local mode integration tests completed"
        echo "🎯 Plugin is ready for release!"
