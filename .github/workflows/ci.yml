name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  validate:
    name: Validate Plugin
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Validate .traefik.yml exists
      run: |
        if [ ! -f ".traefik.yml" ]; then
          echo "‚ùå .traefik.yml manifest file is missing"
          exit 1
        fi
        echo "‚úÖ .traefik.yml manifest found"
        
    - name: Validate go.mod exists  
      run: |
        if [ ! -f "go.mod" ]; then
          echo "‚ùå go.mod file is missing"
          exit 1
        fi
        echo "‚úÖ go.mod file found"
        
    - name: Validate plugin import path
      run: |
        import_path=$(grep "import:" .traefik.yml | cut -d' ' -f2)
        module_path=$(head -1 go.mod | cut -d' ' -f2)
        
        if [ "$import_path" != "$module_path" ]; then
          echo "‚ùå Import path mismatch:"
          echo "   .traefik.yml: $import_path"
          echo "   go.mod: $module_path"
          exit 1
        fi
        echo "‚úÖ Import path matches between .traefik.yml and go.mod"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Run local mode integration test
      run: |
        echo "üß™ Running local mode integration tests..."
        make local-test
        
    - name: Integration test results
      run: |
        echo "‚úÖ Local mode integration tests completed"

  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    needs: [test, integration-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Build plugin
      run: |
        VERSION=$(cat VERSION)
        go build -o cors-regex-$VERSION
        
    - name: Upload build artifacts
      if: ${{ !env.ACT }}
      uses: actions/upload-artifact@v4
      with:
        name: cors-regex-plugin
        path: cors-regex-*
